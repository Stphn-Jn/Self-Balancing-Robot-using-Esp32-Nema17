#include <WiFi.h>
#include <esp_now.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

#define BTN1 12
#define BTN2 14
#define BTN3 27

// Robot MAC address
uint8_t robotAddress[] = {0xF8, 0xB3, 0xB7, 0x44, 0x6F, 0x6C};

// Modes
const char *modes[] = {"Steady", "Spin", "Still"};
int modeIndex = 0;

void OnSent(const wifi_tx_info_t *info, esp_now_send_status_t status) {
  Serial.print("Last Packet Send Status: ");
  if (status == ESP_NOW_SEND_SUCCESS) {
    Serial.println("Success ✅");
  } else {
    Serial.println("Fail ❌");
  }
}

void setup() {
  Serial.begin(115200);

  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println("SSD1306 allocation failed");
    for (;;);
  }
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(0, 0);
  display.println("Remote Starting...");
  display.display();
  pinMode(BTN1, INPUT_PULLUP);
  pinMode(BTN2, INPUT_PULLUP);
  pinMode(BTN3, INPUT_PULLUP);

  WiFi.mode(WIFI_STA);
  if (esp_now_init() != ESP_OK) {
    Serial.println("Error initializing ESP-NOW");
    return;
  }

  esp_now_register_send_cb(OnSent);
  esp_now_peer_info_t peerInfo = {};
  memcpy(peerInfo.peer_addr, robotAddress, 6);
  peerInfo.channel = 0;
  peerInfo.encrypt = false;

  if (esp_now_add_peer(&peerInfo) != ESP_OK) {
    Serial.println("Failed to add peer");
    return;
  }
}

void loop() {
  if (digitalRead(BTN1) == LOW) {  // Next mode
    modeIndex = (modeIndex + 1) % 3;
    delay(200);
  }
  if (digitalRead(BTN2) == LOW) {  // Prev mode
    modeIndex = (modeIndex - 1 + 3) % 3;
    delay(200);
  }
  if (digitalRead(BTN3) == LOW) {  // Send
    esp_now_send(robotAddress, (uint8_t *)modes[modeIndex], strlen(modes[modeIndex]) + 1);
    delay(200);
  }

  // Update OLED
  display.clearDisplay();
  display.setCursor(0, 0);
  display.println("Select Mode:");
  display.println("> " + String(modes[modeIndex]));
  display.display();
}
